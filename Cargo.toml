[package]
name = "krecik"
version = "1.0.2"
authors = ["Daniel (dmilith) Dettlaff <dmilith@me.com>"]
description = "Asynchronous, parallel external service checker (and reporter), using industry standard libraries: Curl, ngHTTP2 and OpenSSL."
keywords = ["curl", "web", "check", "tls-expire", "openssl"]
categories = ["asynchronous", "concurrency"]
homepage = "https://github.com/VerKnowSys/krecik"
license = "MIT"
edition = "2021"
build = "build.rs"
links = "ssl"

[lib]
name = "krecik"
path = "src/lib.rs"

[[bin]]
name = "krecikd"
path = "src/main.rs"

[dependencies]
tracing = { version = "0.1.36", features = ["log", "attributes", "std"] }
tracing-subscriber = { version = "0.3.15", features = ["registry", "fmt", "env-filter"] }

mimalloc = { version = "0.1.29", features = ["local_dynamic_tls", "secure"] }
curl = { version = "0.4.44", features = ["http2", "ssl"] }

serde = { version = "1.0.145", features = ["derive"] }
serde_json = "1.0.85"

ssl-expiration2 = "0.4.0"
# ssl-expiration2 = { path = "../ssl-expiration" }
slack-hooked = "0.9.0"

lazy_static = "1.4.0"
rayon = "1.5.3"
glob = "0.3.0"
chrono = "0.4.22"
failure = "0.1.8"
addy = "0.1.1"
retry = "1.3.1"

###  FROZEN  ###actix = "0.13.0"
actix = "0.13.0"
actix-macros = "0.2.3"
actix-rt = "2.7.0"
actix_derive = "0.6.0"

###   ###    ###

# regex = "1.4.3"
# domain = "0.5.3"
# abstract-ns = "0.4.3"
# ns-std-threaded = "0.3.0"
# bencher = "0.1.5"
# jemallocator = "0.3.2"
# uuid = { version = "0.7", features = ["v4"] }
# rand = "0.4"
# hostname = "0.1"
# atomicwrites = "0.2"
# libc = "0.2"


#
# Explicit Project Setup details:
#


# The release profile, used for `cargo build --release`.
[profile.release]
opt-level = 3
debug = false
rpath = true
lto = 'fat'
debug-assertions = false
codegen-units = 1
panic = 'abort'
incremental = false
overflow-checks = true


# The benchmarking profile, used for `cargo bench` and `cargo test --release`.
[profile.bench]
opt-level = 3
debug = false
rpath = true
lto = 'fat'
debug-assertions = false
codegen-units = 1
incremental = false
overflow-checks = false


# The testing profile, used for `cargo test`.
[profile.test]
opt-level = 0
debug = 0
rpath = true
lto = false
debug-assertions = false
codegen-units = 4
incremental = true
overflow-checks = false


# The development (default) profile, used for `cargo build`.
[profile.dev]
opt-level = 0                 # controls the `--opt-level` the compiler builds with.
                              # 0-1 is good for debugging. 2 is well-optimized. Max is 3.
                              # 's' attempts to reduce size, 'z' reduces size even more.
debug = 2                     # (u32 or bool) Include debug information (debug symbols).
                              # Equivalent to `-C debuginfo=2` compiler flag.
debug-assertions = false      # controls whether debug assertions are enabled
                              # (e.g. debug_assert!() and arithmetic overflow checks)
rpath = true                  # controls whether compiler should set loader paths.
                              # If true, passes `-C rpath` flag to the compiler.
lto = false                   # Link Time Optimization usually reduces size of binaries
                              # and static libraries. Increases compilation time.
                              # If true, passes `-C lto` flag to the compiler, and if a
                              # string is specified like 'thin' then `-C lto=thin` will
                              # be passed.
codegen-units = 4             # if > 1 enables parallel code generation which improves
                              # compile times, but prevents some optimizations.
                              # Passes `-C codegen-units`.
panic = 'unwind'              # panic strategy (`-C panic=...`), can also be 'abort'
incremental = true            # whether or not incremental compilation is enabled
overflow-checks = false       # use overflow checks for integer arithmetic.
                              # Passes the `-C overflow-checks=...` flag to the compiler.
