#!/bin/sh
# blame: @dmilith
# 2018-12-20-1942-1545331365


. bin/common "${*}"


echo
echo
echo "Project directory: ${_cargo_project_dir}"
echo "Project product: ${_bin_name}"
echo "System type: ${_uname}"
echo
echo


failure () {
    printf "FAILURE: %b\n" "${@}"
    exit 1
}

export RUST_BACKTRACE=1
cargo test -- --color always --nocapture
if [ "0" != "${?}" ]; then
    failure "Test: Library: Failed!"
fi


_tests_count=6
_maybe_server_in_background="$(ps xd 2>/dev/null \
    | grep -Ev 'egrep|awk|grep|tail|cat|bat' 2>/dev/null \
    | grep -E "${_bin_name}" 2>/dev/null \
    | awk '{print $1;}' 2>/dev/null \
    | head -n1 2>/dev/null)"

if [ -n "${_maybe_server_in_background}" ]; then
    kill -0 "${_maybe_server_in_background}"
    if [ "0" = "${?}" ]; then
        printf "\n\n%b-WebAPI service is available in background… Spawning additional tests…\n\n" "${_project_name}"
        if [ ! -x "${_curl_software}/bin/curl" ]; then
            failure "Curl software bundle is not installed yet. To install Curl_lib bundle do:  \`s i Curl_lib\` then retry this process."
        fi
        for _tst in $(seq 1 ${_tests_count}); do
            printf "Spawning test: #%b / %b\n" "${_tst}" "${_tests_count}"
            "${_curl_software}/bin/curl" "http://${_travmole_webapi_endpoint}/check/execute/test${_tst}" 2>> "${_travmole_logfile}" | jq '.'
            printf "Test #%b completed.\n\n" "${_tst}"
        done
    else
        printf "\n\nNo %b-WebAPI service available in background… Additional Web-API tests skipped! Invoke \`bin/run dev\` to start it.\n\n" "${_project_name}"
    fi
fi
